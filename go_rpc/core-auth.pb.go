// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core-auth.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	core-auth.proto

It has these top-level messages:
	User
	UserAuthenticationResponse
	Users
	UsersRequest
*/
package go_rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	CreatedAt string `protobuf:"bytes,1,opt,name=createdAt" json:"createdAt,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Password  string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	Role      string `protobuf:"bytes,5,opt,name=role" json:"role,omitempty"`
	Status    string `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	UpdatedAt string `protobuf:"bytes,7,opt,name=updatedAt" json:"updatedAt,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *User) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type UserAuthenticationResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	User  *User  `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *UserAuthenticationResponse) Reset()                    { *m = UserAuthenticationResponse{} }
func (m *UserAuthenticationResponse) String() string            { return proto.CompactTextString(m) }
func (*UserAuthenticationResponse) ProtoMessage()               {}
func (*UserAuthenticationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserAuthenticationResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserAuthenticationResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Users struct {
	Users  []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	Limit  int32   `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset int32   `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Total  int32   `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Users) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Users) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Users) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type UsersRequest struct {
	Filters *User `protobuf:"bytes,1,opt,name=filters" json:"filters,omitempty"`
	Limit   int32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset  int32 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
}

func (m *UsersRequest) Reset()                    { *m = UsersRequest{} }
func (m *UsersRequest) String() string            { return proto.CompactTextString(m) }
func (*UsersRequest) ProtoMessage()               {}
func (*UsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UsersRequest) GetFilters() *User {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *UsersRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *UsersRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*UserAuthenticationResponse)(nil), "UserAuthenticationResponse")
	proto.RegisterType((*Users)(nil), "Users")
	proto.RegisterType((*UsersRequest)(nil), "UsersRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CoreAuth service

type CoreAuthClient interface {
	AuthenticateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserAuthenticationResponse, error)
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	GetUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	GetUsers(ctx context.Context, in *UsersRequest, opts ...grpc.CallOption) (*Users, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
}

type coreAuthClient struct {
	cc *grpc.ClientConn
}

func NewCoreAuthClient(cc *grpc.ClientConn) CoreAuthClient {
	return &coreAuthClient{cc}
}

func (c *coreAuthClient) AuthenticateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserAuthenticationResponse, error) {
	out := new(UserAuthenticationResponse)
	err := grpc.Invoke(ctx, "/CoreAuth/authenticateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreAuthClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/CoreAuth/createUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreAuthClient) DeleteUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/CoreAuth/deleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreAuthClient) GetUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/CoreAuth/getUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreAuthClient) GetUsers(ctx context.Context, in *UsersRequest, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := grpc.Invoke(ctx, "/CoreAuth/getUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreAuthClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/CoreAuth/updateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CoreAuth service

type CoreAuthServer interface {
	AuthenticateUser(context.Context, *User) (*UserAuthenticationResponse, error)
	CreateUser(context.Context, *User) (*User, error)
	DeleteUser(context.Context, *User) (*User, error)
	GetUser(context.Context, *User) (*User, error)
	GetUsers(context.Context, *UsersRequest) (*Users, error)
	UpdateUser(context.Context, *User) (*User, error)
}

func RegisterCoreAuthServer(s *grpc.Server, srv CoreAuthServer) {
	s.RegisterService(&_CoreAuth_serviceDesc, srv)
}

func _CoreAuth_AuthenticateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreAuthServer).AuthenticateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoreAuth/AuthenticateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreAuthServer).AuthenticateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreAuth_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreAuthServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoreAuth/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreAuthServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreAuth_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreAuthServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoreAuth/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreAuthServer).DeleteUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreAuth_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreAuthServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoreAuth/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreAuthServer).GetUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreAuth_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreAuthServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoreAuth/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreAuthServer).GetUsers(ctx, req.(*UsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreAuth_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreAuthServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CoreAuth/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreAuthServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoreAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CoreAuth",
	HandlerType: (*CoreAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "authenticateUser",
			Handler:    _CoreAuth_AuthenticateUser_Handler,
		},
		{
			MethodName: "createUser",
			Handler:    _CoreAuth_CreateUser_Handler,
		},
		{
			MethodName: "deleteUser",
			Handler:    _CoreAuth_DeleteUser_Handler,
		},
		{
			MethodName: "getUser",
			Handler:    _CoreAuth_GetUser_Handler,
		},
		{
			MethodName: "getUsers",
			Handler:    _CoreAuth_GetUsers_Handler,
		},
		{
			MethodName: "updateUser",
			Handler:    _CoreAuth_UpdateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core-auth.proto",
}

func init() { proto.RegisterFile("core-auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x3d, 0x6f, 0xea, 0x40,
	0x10, 0x7c, 0x06, 0x9f, 0x81, 0x7d, 0x9f, 0x3a, 0x3d, 0x3d, 0x19, 0x83, 0xf4, 0x90, 0xd3, 0xa4,
	0x89, 0x0b, 0xd2, 0xa4, 0x45, 0xa9, 0xd3, 0x58, 0x4a, 0x99, 0xe2, 0x82, 0x97, 0x70, 0x8a, 0xf1,
	0x39, 0x77, 0x6b, 0xe5, 0x6f, 0xe5, 0x17, 0xe5, 0xb7, 0x44, 0x77, 0xeb, 0x00, 0x05, 0x14, 0xa9,
	0xec, 0x99, 0xb1, 0x67, 0xe7, 0x66, 0x0f, 0x7e, 0xaf, 0x8d, 0xc5, 0x2b, 0xd5, 0xd1, 0xb6, 0x68,
	0xad, 0x21, 0x93, 0xbf, 0x45, 0x10, 0xdf, 0x3b, 0xb4, 0x72, 0x0e, 0x93, 0xb5, 0x45, 0x45, 0x58,
	0xad, 0x28, 0x8d, 0x16, 0xd1, 0xe5, 0xa4, 0x3c, 0x10, 0xf2, 0x2f, 0x08, 0xdc, 0x29, 0x5d, 0xa7,
	0x83, 0xa0, 0x30, 0x90, 0xbf, 0x60, 0xa0, 0xab, 0x74, 0x18, 0xa8, 0x81, 0xae, 0x64, 0x06, 0xe3,
	0x56, 0x39, 0xf7, 0x6a, 0x6c, 0x95, 0xc6, 0x81, 0xdd, 0x63, 0x29, 0x21, 0xb6, 0xa6, 0xc6, 0x54,
	0x04, 0x3e, 0xbc, 0xcb, 0x7f, 0x90, 0x38, 0x52, 0xd4, 0xb9, 0x34, 0x09, 0x6c, 0x8f, 0x7c, 0x96,
	0xae, 0xad, 0xfa, 0x2c, 0x23, 0xce, 0xb2, 0x27, 0xf2, 0x3b, 0xc8, 0x7c, 0xe2, 0x55, 0x47, 0x5b,
	0x6c, 0x48, 0xaf, 0x15, 0x69, 0xd3, 0x94, 0xe8, 0x5a, 0xd3, 0x38, 0xf4, 0x49, 0xc9, 0x3c, 0x63,
	0xd3, 0x9f, 0x81, 0x81, 0x9c, 0x42, 0xdc, 0x39, 0xb4, 0x21, 0xfe, 0xf7, 0xa5, 0x28, 0xbc, 0x41,
	0x19, 0xa8, 0x7c, 0x0b, 0xc2, 0x23, 0x27, 0x67, 0x20, 0x3c, 0xe1, 0xd2, 0x68, 0x31, 0x3c, 0x7c,
	0xc4, 0x9c, 0xb7, 0xad, 0xf5, 0x4e, 0x53, 0x70, 0x10, 0x25, 0x03, 0x7f, 0x00, 0xb3, 0xd9, 0x38,
	0xa4, 0x50, 0x82, 0x28, 0x7b, 0xc4, 0x21, 0x48, 0xd5, 0xa1, 0x05, 0x51, 0x32, 0xc8, 0x1f, 0xe0,
	0x47, 0x98, 0x54, 0xe2, 0x4b, 0x87, 0x8e, 0xe4, 0x7f, 0x18, 0x6d, 0x74, 0x4d, 0x3c, 0xf2, 0x28,
	0xd7, 0x27, 0xfb, 0xb5, 0xa1, 0xcb, 0xf7, 0x08, 0xc6, 0xb7, 0xc6, 0xa2, 0x2f, 0x46, 0xde, 0xc0,
	0x1f, 0x75, 0x28, 0x08, 0xc3, 0x8a, 0xd9, 0x3e, 0x9b, 0x15, 0xe7, 0xeb, 0xcb, 0xbf, 0xc9, 0x39,
	0x00, 0xef, 0xfd, 0xf8, 0x1f, 0x7e, 0xb0, 0x5a, 0x61, 0x8d, 0x67, 0xd4, 0x29, 0x8c, 0x9e, 0x90,
	0x4e, 0x4a, 0x17, 0x30, 0xee, 0x25, 0x27, 0x7f, 0x16, 0xc7, 0x3d, 0x64, 0x09, 0x43, 0x76, 0xe7,
	0x3d, 0x9f, 0xb2, 0x78, 0x4c, 0xc2, 0x95, 0xbd, 0xfe, 0x08, 0x00, 0x00, 0xff, 0xff, 0xba, 0xd0,
	0x20, 0x02, 0xc5, 0x02, 0x00, 0x00,
}
